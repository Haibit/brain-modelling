% check_leadfield_dipolesim
% Check the leadfield generated by ft_prepare_leadfield and
% ft_dipolesimulation

% NOTE ft_dipolesimulation requires a save leadfield
cfgtmp = ftb.get_stage(cfg,'dipolesim');
cfgdp = ftb.load_config(cfgtmp.stage.full);
sim = ftb.util.loadvar(cfgdp.files.ft_dipolesimulation.signal);

cfgtmp = ftb.get_stage(cfg,'leadfield');
cfglf = ftb.load_config(cfgtmp.stage.full);
leadfield = ftb.util.loadvar(cfglf.files.leadfield);

dip = cfgdp.signal.ft_dipolesimulation.dip;
if ~isequal(dip.unit, leadfield.unit)
    error(['ftb:' mfilename],...
        'units do not match');
end

% Get the leadfield that corresponds to the exact dipole position
[~,idx] = ismember(dip.pos,leadfield.pos,'rows');

% Get the leadfield that corresponds to the dipole position in mm
[~,idx2] = ismember(ceil(dip.pos/10), leadfield.pos, 'rows');

%% Quantify
lfsim = sim.leadfield{1};
fprintf('leadfield: dipole\n')
fprintf('  norm: %f\n', norm(lfsim,'fro'));

lf = leadfield.leadfield{idx};
fprintf('leadfield: leadfield grid\n')
fprintf('  norm: %f\n', norm(lf,'fro'));

lfdif = leadfield.leadfield{idx2};
fprintf('leadfield: leadfield grid mm\n')
fprintf('  norm: %f\n', norm(lfdif,'fro'));